.TH pyp2rpm(1)

.SH NAME
.B pyp2rpm
Tool which converts a package from PyPI to RPM specfile or SRPM.

.SH SYNOPSIS
.B mybin.py
[\fI\,OPTIONS\/\fR] \fI\,PACKAGE\/\fR


.SH ARGUMENTS
.B PACKAGE
PyPI name of the package or path to compressed source file.

.SH DESCRIPTION
Tool convert Python package to RPM SPECFILES. The package can be download from PyPI or from the local filesystem and the produced SPEC is in line with Fedora packaging Guidelines or Mageia Python Policy.
.PP
Users can provide their own templates for rendering the package metadata. Both the package source and metadata can be extracted from PyPI or from local filesystem (local file doesn't provide that much information though).

.SH OPTIONS
.TP
.B "\-t \-\-TEMPLATE"
Template file (jinja2 format) to render (default: "fedora").
Search order is: 1) filesystem, 2) default templates.
.TP
.B "\-o \-\-DISTRO"
Default distro whose conversion rules to use (default: "fedora"). Default templates have their rules associated and ignore this.
.TP
.B "\-b \-\-BASE_PYTHON"
Base Python version to package for (fedora default: "3").
.TP
.B "\-p \-\-PYTHON_VERSIONS"
Additional Python versions to include in the specfile (e.g. -p2 for python2 subpackage). Can be specified multiple times. Specify additional version or use -b explicitly to disable default.
.TP
.B "\-s \"
Spec file ~/rpmbuild/SPECS/python-package_name.spec will be created (default: prints spec file to stdout).
.TP
.B "\--srpm \ "
When used pyp2rpm will produce srpm instead of printing specfile into stdout.
.TP
.B "\--proxy \-\-PROXY"
Specify proxy in the form proxy.server:port.
.TP
.B "\-r \-\-RPM_NAME"
Name of rpm package (overrides calculated name).
.TP
.B "\-d \-\-SAVE_DIR"
Specify where to save package file, specfile and generated SRPM (default: "~/rpmbuild").
.TP
.B "\-v \-\-VERSION"
Version of the package to download (ignored for local files).
.TP
.B "\--venv / --no-venv \"
Enable / disable metadata extraction from virtualenv.
.TP
.B "\--autonc/ --no-autonc\"
Enable / disable using automatic provides with a standardized name in dependencies declaration.
.TP
\fB\-\-sclize\fR
Convert tags and macro definitions to SCL\-style
using `spec2scl` module. NOTE: SCL related options
can be provided alongside this option.
.TP
.B "\-h , --help\"
show this help message and exit.
.SS "SCL related options:"
.TP
\fB\-\-no\-meta\-runtime\-dep\fR
Don't add the runtime dependency on the scl
runtime package.
.TP
\fB\-\-no\-meta\-buildtime\-dep\fR
Don't add the buildtime dependency on the scl
runtime package.
.TP
\fB\-\-skip\-functions\fR FUNCTIONS
Comma separated list of transformer functions to
skip.
.TP
\fB\-\-no\-deps\-convert\fR
Don't convert dependency tags (mutually
exclusive with \fB\-\-list\-file\fR).
.TP
\fB\-\-list\-file\fR FILE_NAME
List of the packages/provides, that will be in
the SCL (to convert Requires/BuildRequires
properly). Lines in the file are in form of
"pkg\-name %%{?custom_prefix}", where the prefix
part is optional.


.SH EXAMPLES
.TP
.B pyp2rpm  [PACKAGE]
Create the SPECFILE
.TP
.B pyp2rpm --srpm [PACKAGE]
Create source RPM package
.TP
.B pyp2rpm -b 2 -p 3 [PACKAGE]
Generate a SPECFILE for python2 and python3
.TP
.B pyp2rpm -b 3 [PACKAGE]
Generate a SPECFILE for python3
.TP
.B pyp2rpm ~/rpmbuild/SOURCES/python_package_name.tar.gz
Pick up package from the local filesystem.

 

	

.SH LANGUAGE
PYTHON

.SH LICENCE
MIT

.SH AUTHOR
Writen by Bohuslav "Slavek" Kabrda, Robert Kuska, Michal Cyprian, Iryna Shcherbina
